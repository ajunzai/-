computed原理 https://blog.csdn.net/sinat_17775997/article/details/82682972
  存在watchers[key] = new Watch（） 里面的value里面 再dirty为true的时候重新更新this.value = this.get() 否则为this.value

为什么不用Index作为key https://juejin.im/post/6844904133430870024
  通过虚拟dom比较每一个key的文本内容和节点删除，所以刷新整个节点
  
怎么设置rem
  document.documentElement.style.fontSize = document.documentElement.clientWidth / 750 + 'px';
  
从零开始实现一个vue-router插件（注意什么）https://segmentfault.com/a/1190000020213325?utm_source=tag-newest
  怎么在里面用this.router
  在install这个静态方法里面加beforeCreate混入到实例中，会把相同的名称放在数组中优先执行混入的。
  那么就可以在根组件上挂着route，子组件上挂着parent.route。因为组件实例化是从外到内的 this.$router用Object.defineProperty
  
怎么让自己编写的npm包支持node和浏览器环境?
  webpack打包
  output: libraryTarget: umd
  模块 commonJS和module I/O读写区别
  
识别图片和视频的格式？
  二进制格式 通过 new FileReader()
  
 vuex对ts的支持太弱？一个让 vuex 更好的支持 typescript 的解决方案
 https://blog.csdn.net/weixin_34160277/article/details/93182408

js中函数声明先提升还是变量先提升
  函数提升优先级比变量提升要高，且不会被变量声明覆盖，但是会被变量赋值覆盖。

垃圾回收 https://segmentfault.com/a/1190000018605776   https://blog.csdn.net/qq_17550381/article/details/81126809
  标记清楚算法。是否存在引用链     引用计数

监听者模式和订阅发布模式有何区别 https://www.zhihu.com/question/23486749
  监听者模式，好比把多个观察者放到一个被观察者类中，触发被观察者的更新，则通过所有观察者类。 事件会越来越复杂
  发布订阅模式，实例发布者类，通过不同id增加订阅者（subscribe）所要订阅的的hanlde，然后发布更新会通知每一个订阅者  有一个中间代理

组件设计原则 https://github.com/lightningminers/article/issues/36
  扁平化、面向数据的 state/props
  更加纯粹的 State 变化
  低耦合
  辅助代码分离
  提炼精华
  及时模块化
  状态统一管理
  
js是否会阻塞dom数构建？ https://juejin.im/post/6844903855411429390
  css 的加载解析会阻塞 dom 的渲染。
  css 的加载解析会阻塞后续的 script 执行，但不会阻塞 dom 解析。
  没有 async 和 defer 属性的 script 加载或执行都会阻塞 dom 的解析。
  带有 async 或 defer 属性的 script 加载或执行都不会阻塞 dom 的解析。
  async 的脚本加载完毕后立即执行，不保证执行顺序，而 defer 脚本在 dom 解析完毕后才执行，基本能保证按着脚本加载顺序执行。

浏览器有哪些进程？ https://blog.csdn.net/weixin_43276913/article/details/105225973
  GPU进程  负责ui渲染
  网络进程  加载页面网络资源
  插件进程  负责插件运行
  主进程  界面显示，用于交互子进程管理、存储功能
  渲染进程  1.每一个tab页面都有一个渲染进程，使界面可以进行交互
            2.线程  GUI线程  负责浏览器渲染 解析html、css构建dom树和render树，布局 重排。回流
                    js引擎线程  解析javasc脚本，运行代码
                    定时触发器线程  settimeout并不是又js引擎执行的（eventloop）
                    事件触发线程  辅助js引擎，用于控制事件轮询，鼠标点击，AJAX异步请求等，对应任务会被添加到事件触发线程中，符合触发条件事件会被该线程添加到任务队列的末尾，等待js引擎出力
                    异步http线程  用于处理XMLHttpRequest将回调函数放到js引擎线程的任务队列中，等待js引擎执行
