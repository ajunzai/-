1. 垃圾回收机制gc？（可达性）
    解答：可达性，从ROOT开始。通过对象是否有传入的引用链来判断是否可被回收，无法访问的数据块都会失效
         内部算法——”标记-清除“
         1）获取根并标记（根下一层）
         2）然后访问并标记所有来自它们的引用（根下一层的引用，继续下一层）
         3）所有访问的对想都被记住，以便以后访问同一个对象两次
         4）除标记的对象，都被删除
      优化：分代回收，增量回收，cpu空闲时间回收
      
2. 前端路由实现，hash和histroy区别？ （都是通过监听或者触发事件来更替html）
    hash：是#后面的那部分，改变不会引起页面刷新，通过hashchange事件监听URL变化返回不同页面
    history：提供了pushState和replaceState方法，但是这两个方法改变了URL不会引起页面刷新。还提供了hashchange和popstate事件，但是popstate事件只有在浏览器前进后腿才能监听到。
             用最前面两个事件不会触发popstate事件，好在我们可以拦截pushstate/replacestate的调用和a标签的变化来检测URL变化
      实现：初始化的时候给a标签注册点击事件更改路径并且替换页面内容

3. eventloop里面的宏任务和微任务？
4. http和http2？
5. 输入url到浏览器做了什么？（把重构和回流了解详细）

6. BFC触发 和 解决方法?
    解答：块格式化上下文 生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。
    场景：  1）外边距折叠问题————把两个元素置于不同的BFC进行隔离 overflow：hidden
           2）清楚浮动————容器因float浮动脱离文档流，导致容器元素没有被撑大 overflow：hidden
           3）阻止普通元素被浮动元素覆盖（可以用自适应两栏布局）————给普通元素增加BFC，overflow：hiidden
    触发：浮动、绝对定位、行内块元素、overflow值不为visible、等一系列。
    
7. 前端安全问题，注入 和 CSRF、XSS？
8. js三态，多态，继承，封装。 自己怎么理解面向对象，有去用过吗？
9. 对es6  的map、set、Reflect、其它一些的使用和理解？
10. 协商缓存和强缓存返回状态码是304？
